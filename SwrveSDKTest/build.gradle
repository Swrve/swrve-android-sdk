apply plugin: 'com.android.application'

android {
    namespace 'com.swrve.sdk.test'
    compileSdk Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)

    defaultConfig {
        minSdkVersion Integer.parseInt(project.ANDROID_BUILD_MIN_SDK_TESTS)
        targetSdkVersion Integer.parseInt(project.ANDROID_BUILD_TARGET_SDK_VERSION)
        applicationId 'com.swrve.sdk.test'
        multiDexEnabled true
    }

    buildTypes {
        release { }
        debug {
            // Needed to run on devices and extract coverage
            debuggable true
        }
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        String isCIRCLECI = System.getenv('CIRCLECI')
        if (isCIRCLECI != null && isCIRCLECI.toBoolean()) {
            project.logger.lifecycle('Swrve: Running in CIRCLECI. Setting maxHeapSize 1024m from SwrveSDKTest/build.gradle')
            unitTests.all {
                maxHeapSize = "1024m"
            }
        }
    }

    flavorDimensions "swrve-sdk"

    productFlavors {
        core {
            flavorDimensions "swrve-sdk"
        }
        amazon {
            flavorDimensions "swrve-sdk"
        }
        firebase {
            flavorDimensions "swrve-sdk"
        }
        huawei {
            flavorDimensions "swrve-sdk"
            minSdkVersion Integer.parseInt(project.HUAWEI_BUILD_MIN_SDK_VERSION)
        }
    }

    lintOptions {
        abortOnError true
        baseline file("../lint/lint-baseline-swrvesdktest-firebase.xml")
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    // SDK
    api project(path: ':SwrveSDK')
    implementation 'com.google.code.gson:gson:' + project.GSON_VERSION
    implementation 'androidx.work:work-runtime:' + project.ANDROIDX_WORK_RUNTIME_VERSION
    api 'androidx.multidex:multidex:2.0.1'

    huaweiImplementation 'com.huawei.hms:push:' + project.HMS_PUSH_KIT_VERSION

    // Unit tests
    testImplementation 'org.mockito:mockito-core:3.6.28'

    testImplementation 'com.squareup.okhttp3:mockwebserver:4.9.3'
    testImplementation 'com.squareup.okhttp3:okhttp-tls:4.9.3'

    // Robolectric tests
    testImplementation 'junit:junit:4.13'
    testImplementation('org.robolectric:robolectric:' + project.TEST_ROBOLECTRIC_VERSION) {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }
    testImplementation 'org.robolectric:shadows-playservices:4.11'
    testImplementation 'com.google.android.gms:play-services-auth:20.7.0' // required for tests using ShadowGoogleApiAvailability and org.robolectric:shadows-playservices
    testImplementation 'androidx.test:core:1.3.0'

    testImplementation 'org.awaitility:awaitility:4.2.0'

    // The amazon-device-messaging jar is not distributed with Swrve source code and a stubbed out
    // version is used instead.
    api fileTree(dir: "../SwrveSDK/providedLibs", include: ['amazon-device-messaging*.jar'])
}

apply plugin: 'com.google.gms.google-services'
