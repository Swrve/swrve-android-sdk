apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    publishNonDefault true // Needed to instruct the SDK build of a particular flavor

    defaultConfig {
        minSdkVersion 10
        targetSdkVersion 22
    }

    buildTypes {
        release {}
        debug {}
    }

    productFlavors {
        core {}
        google {}
    }

    lintOptions {
        abortOnError true
    }
}

dependencies {
    compile 'com.google.code.gson:gson:2.2.+'
    compile 'com.android.support:support-v4:22.+'
    compile 'com.android.support:appcompat-v7:22.+'
    googleCompile 'com.google.android.gms:play-services:6.+'
}

apply plugin: 'maven-publish'
apply plugin: 'signing'


publishing {
    publications {
        core(MavenPublication) {
            artifactId swrveCoreArtifactId
            groupId swrveGroupId
            version swrveSdkVersion
            artifacts = [androidSourcesJar, "$buildDir/outputs/aar/${project.name}-core-release.aar"]

            // The publication doesn't know about our dependencies due to components.java not being present in aar pieces
            // so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', 'compile')
                }

                configurations.coreCompile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', 'compile')
                }
            }
        }
        google(MavenPublication) {
            artifactId swrveGoogleArtifactId
            groupId swrveGroupId
            version swrveSdkVersion
            artifacts = [androidSourcesJar, "$buildDir/outputs/aar/${project.name}-google-release.aar"]

            // The publication doesn't know about our dependencies due to components.java not being present in aar pieces
            // so we have to manually add them to the pom
            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.compile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', 'compile')
                }

                configurations.googleCompile.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                    dependencyNode.appendNode('scope', 'compile')
                }
            }
        }
    }

    repositories {
        maven {
            url '../repo/releases'
        }
    }
}

task androidSourcesJar(type: Jar) {
    classifier = 'source'
    from android.sourceSets.main.java.srcDirs
}